services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    volumes:
      - .:/var/www/app
    ports:
      - "3000:3000"
    networks:
      - default

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "database"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
    networks:
      - default

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  nginx:
    image: nginx:alpine
    container_name: nginx-server
    restart: unless-stopped
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - .:/var/www/app
      - ./certbot/www/:/var/www/certbot/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - default

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  db_data:
  redis-data:
